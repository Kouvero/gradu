Central references:

2017-3-13
Free writing about usability and general stuff. Formulating thesis structure.
Reading thesis book and about reading other theses.

2017-3-14
Argument: what is the usability of video game tutorials. Are they usable?
How usable are they? Thesis in a month method / slowflake method. "The
usability of video game tutorials is not as good as it can be" OR "the usability
of video game tutorials correlates with review scores" etc.'
EXPERT REVIEW vs. usability testing. What usability testing means here: evaluating
usability with a group of test users.
Writing with an argument first?

2017-3-14
Defining usability

2017-3-31
How to pick games and method? What could the conlusions be like? Format of conclusions?
How to justify genres?
Mechanics vs. usability (HEP article)

2017-5-8
Although in traditional usability contexts it can generally be important to know as a user what you are supposed to do next, which in turn means that you know what you want to be doing. A piece of software is seen as a tool here, that was built to complete a certain predefined task, help organize information etc. Video games, however, don't necessarily always follow this pattern. There are many open-ended games that don't give a you a set of predefined tasks you need to complete in order to proceed (Chris Crawford etc.). Comparing straightforward action games where the only way is forward and you keep building on the things you complete while playing, games with a more free form don't know what you want to do next. You can take many paths (e.g. in the so-called 4X games (eXplore, eXpand, eXploit, and eXterminate), i.e. you can't always be offered everything at once, rather the game adapts to your choices and presents information based on what you choose to do at a given time. Stellaris has a contextual tutorial.

2017-8-28
Notes for conclusion:
There are very little heuristics related to tutorials in the literature
Games are a voluntary activity, so the requirement for good usability and guidance becomes even more important, because the first hours of the game are the most imporant time to keep the player playing the game.
Player retention is not all about the tutorials, since some tutorials last for a very long time and are not a separate section at the very beginning of the game. Tutorials can be coming up many hours into the game.
The games have been selected based on personal preference among many different genres.
ISO/IEC 9126-1 says: usability is related to the specified conditions. Conditions of playing a game vs. using productivity software ("when used under specified conditions")
Quality in use: the capability of the software product to enable specified users to achieve specified gaols with effectiveness, productivity, safety and satisfaction in specified contexts of use.
Even with video game tutorials, we can return to these basic definitions of usability and realize that they would be an important part to take into account during the development process and tutorial design.
Is it enough if tutorials are efficient, do they also have to be fun? Is fun the task of the core game, not the tutorial, or both?
Games have outcomes and are completed, they are not used indefinitely like productivity software. But also, games can still have many options for which actions to take at any given time, and it is not necessarily a good idea to teach everything first, but rather do it right before the player takes a certain action.
Finding what is meaningful for tutorials from existing heuristics for games.
A tutorial is the general way the game teaches how it is played, not a separate section in the game (explicit and implicit tutorials).

2017-10-12
Last suggested articles

2017-10-21
Huomioi GAP (palaute-pdf s. 19)

Game approachability vs. usability (GAP)

TUTORIALS FROM AN INDUSTRY PERSPECTIVE: how to get players hooked to premium games and thus also spending money at a later stage. (gamasutra/jarvinen) "does the ui beg to continue clicking" also there's talk about incentives

DIFFERENT LEARNER TYPES (gamasutra/graner). this can go along with the heuristics as grounds for using different types of interactive cues (colors, sounds, haptic feedback etc.)

explorative acquisition: try everything and take risks

modeling acquisition: know how something works before trying. requires repeating of the action before moving forward. also possibly learning the interface first before learning the rest of the game (can contradict with immersion)

-> can be combined by making the tutorial parts skippable for the explorative player.

DESIGNER'S NOTEBOOK: eight ways to make a bad tutorial (gamasutra/adams)
many of these are found in our heuristics (opposites)

MULTI-SYSTEM GAMES (bycer/gamasutra) basic stuff already covered

THE ART OF THE TUTORIAL: when to hold a player's hand, when to let it go (gamasutra/wawro)
"who do you build tutorials for", could fit in the conclusion
also a lot of stuff already covered

TUTORIAL DESIGN AND THE CUPHEAD DEMO ARGUMENT (gamasutra/bycer)
again, what is the game's audience? even in a difficult game, teaching mechanics in order of complexity---and separately from each other---can be a good thing, even if the assumed audience would be the so-called hardcore gamers. in this case, even showing an example first and then letting the player try it out themselves. the controls can already be difficult enough, but making the player also figure out how to utilize the controls can be frustrating. the problem is in what kind of order things are presented and if they are even presented at the correct time, that is, when the player actually needs them for the first time.
